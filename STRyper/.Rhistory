file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/bioMol-Wolbachia.xlsx"
sheet = "BX24T génitrices"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "C8:G15"))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "C17:G24"))
loci2 = data.table(read_xlsx(path = file, sheet = sheet, range = "C26:G33"))
nc = ncol(plan)
nc
nr = nrow(plan)
nr
plan
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/bioMol-Wolbachia.xlsx"
sheet = "BX24T génitrices"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "C8:G15", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "C17:G24", col_names = F))
loci2 = data.table(read_xlsx(path = file, sheet = sheet, range = "C26:G33", col_names = F))
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
locus2 = as.vector(as.matrix(loci2))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("locus2")) {
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[locus == "Tleu", type := "Reference"]
if(exists("locus2")) {
plan[locus == "Tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
planb = plan
setnames(planb, c("General:Pos", "General:Sample Name", "General:Target Name", "Rel Quant:Target Type", "General:Filt. Comb.", "General:Repl. Of"))
planb
fwrite(planb[`General:Sample Name` != "",], "/Volumes/WININSTALL/plate17062024.txt",  row.names = F, col.names = T, quote = F, sep = "\t")
fwrite(planb[`General:Sample Name` != "",], "/Volumes/WININSTALL/plate17062024.txt",  row.names = F, col.names = T, quote = F, sep = "\t")
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "3L:10S", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "13L:20S", col_names = F))
library(data.table)
library(readxl)
library(stringi)
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/bioMol-Wolbachia.xlsx"
sheet = "test RNA XS 18 juin"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "3L:10S", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "13L:20S", col_names = F))
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "L3:S10", col_names = F))
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/extractions et qPCR virus.xlsx"
sheet = "test RNA XS 18 juin"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "L3:S10", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "L13:S20", col_names = F))
loci1
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
locus2 = as.vector(as.matrix(loci2))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("locus2")) {
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[locus == "Tleu", type := "Reference"]
if(exists("locus2")) {
plan[locus == "Tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
planb = plan
setnames(planb, c("General:Pos", "General:Sample Name", "General:Target Name", "Rel Quant:Target Type", "General:Filt. Comb.", "General:Repl. Of"))
planb
loci1
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "L13:S20", col_names = F))
loci1
plan
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "L3:S10", col_names = F))
plan
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "L3:S10", col_names = F))
plan
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "L3:S10", col_names = F))
plan
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "K3:R10", col_names = F))
plan
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "K13:R20", col_names = F))
loci1
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
locus2 = as.vector(as.matrix(loci2))
setnames(planb, c("General:Pos", "General:Sample Name", "General:Target Name", "Rel Quant:Target Type", "General:Filt. Comb.", "General:Repl. Of"))
planb
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "K3:R10", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "K13:R20", col_names = F))
#loci2 = data.table(read_xlsx(path = file, sheet = sheet, range = "C26:G33", col_names = F))
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("loci2")) {
locus2 = as.vector(as.matrix(loci2))
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[tolower(locus) == "tleu", type := "Reference"]
if(exists("locus2")) {
plan[locus == "Tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
planb = plan
setnames(planb, c("General:Pos", "General:Sample Name", "General:Target Name", "Rel Quant:Target Type", "General:Filt. Comb.", "General:Repl. Of"))
planb
planb[`General:Sample Name` != "",]
fwrite(planb[`General:Sample Name` != "",], "/Volumes/WININSTALL/plate18062024.txt",  row.names = F, col.names = T, quote = F, sep = "\t")
library(data.table)
library(readxl)
library(stringi)
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/extractions et qPCR virus.xlsx"
sheet = "test RNA XS 18 juin"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "J3:Q10", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "J13:Q20", col_names = F))
plan
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("loci2")) {
locus2 = as.vector(as.matrix(loci2))
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[tolower(locus) == "tleu", type := "Reference"]
if(exists("loci2")) {
plan[locus == "Tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
planb = plan
setnames(planb, c("General:Pos", "General:Sample Name", "General:Target Name", "Rel Quant:Target Type", "General:Filt. Comb.", "General:Repl. Of"))
planb
res = fread("~/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/plate18062024_absolute.txt", skip = 1, header = T, select = 3:5, dec = ",")
res
res = merge(plan[sample != ""], res, by.x = "pos", by.y = "Pos", all = T)
plan
plan[sample != ""]
plan
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/extractions et qPCR virus.xlsx"
sheet = "test RNA XS 18 juin"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "J3:Q10", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "J13:Q20", col_names = F))
#loci2 = data.table(read_xlsx(path = file, sheet = sheet, range = "C26:G33", col_names = F))
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("loci2")) {
locus2 = as.vector(as.matrix(loci2))
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[tolower(locus) == "tleu", type := "Reference"]
if(exists("loci2")) {
plan[locus == "Tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
res = merge(plan[sample != ""], res, by.x = "pos", by.y = "Pos", all = T)
res[,all(sample == Name, na.rm = T)]
res[,Name := NULL]
means = res[,.(meanCp = mean(Cp, na.rm = T), range = diff(range(Cp))), by = .(sample, locus)]
means = melt(means, id.vars = c("sample", "locus"), measure.vars = c("meanCp", "range"), variable.name = "type", value.name = "value")
means = dcast(means, sample ~ locus + type, value.var = "value")
means[,dose := round(2^(TLeu_meanCp - P3_meanCp), 3)]
means[is.na(dose) & TLeu_meanCp < 36, dose := 0]
means
setorder(means, sample)
means
means = res[,.(meanCp = mean(Cp, na.rm = T), range = diff(range(Cp, na.rm = T))), by = .(sample, locus)]
means = melt(means, id.vars = c("sample", "locus"), measure.vars = c("meanCp", "range"), variable.name = "type", value.name = "value")
means = dcast(means, sample ~ locus + type, value.var = "value")
means[,dose := round(2^(TLeu_meanCp - P3_meanCp), 3)]
means[is.na(dose) & TLeu_meanCp < 36, dose := 0]
means
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/extractions et qPCR virus.xlsx"
sheet = "dosages tissus 13 juin"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "J3:Q10", col_names = F))
plan
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/extractions et qPCR virus.xlsx"
sheet = "dosages tissus 13 juin"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "K3:R10", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "K13:R20", col_names = F))
plan
loci1
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("loci2")) {
locus2 = as.vector(as.matrix(loci2))
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[tolower(locus) == "tleu", type := "Reference"]
if(exists("loci2")) {
plan[tolower(locus) == "tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
plan
# importation des résultats (quantification absolue)
res = fread("~/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/qPCR 13_06/qPCR140624.txt", skip = 1, header = T, select = 3:5, dec = ",")
0
res = merge(plan[sample != ""], res, by.x = "pos", by.y = "Pos", all = T)
res[,all(sample == Name, na.rm = T)] # doit être TRUE
res[,Name := NULL]
means = res[,.(meanCp = mean(Cp, na.rm = T), range = diff(range(Cp, na.rm = T))), by = .(sample, locus)]
means = melt(means, id.vars = c("sample", "locus"), measure.vars = c("meanCp", "range"), variable.name = "type", value.name = "value")
means = dcast(means, sample ~ locus + type, value.var = "value")
means[,dose := round(2^(TLeu_meanCp - P3_meanCp), 3)]
means[is.na(dose) & TLeu_meanCp < 36, dose := 0]
means
res
plan
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "K3:R10", col_names = F))
plan
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "K3:V10", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "K13:V20", col_names = F))
#loci2 = data.table(read_xlsx(path = file, sheet = sheet, range = "C26:G33", col_names = F))
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("loci2")) {
locus2 = as.vector(as.matrix(loci2))
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[tolower(locus) == "tleu", type := "Reference"]
if(exists("loci2")) {
plan[tolower(locus) == "tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
# importation des résultats (quantification absolue)
res = fread("~/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/qPCR 13_06/qPCR140624.txt", skip = 1, header = T, select = 3:5, dec = ",")
0
res = merge(plan[sample != ""], res, by.x = "pos", by.y = "Pos", all = T)
res[,all(sample == Name, na.rm = T)] # doit être TRUE
res[,Name := NULL]
means = res[,.(meanCp = mean(Cp, na.rm = T), range = diff(range(Cp, na.rm = T))), by = .(sample, locus)]
means = melt(means, id.vars = c("sample", "locus"), measure.vars = c("meanCp", "range"), variable.name = "type", value.name = "value")
means = dcast(means, sample ~ locus + type, value.var = "value")
means[,dose := round(2^(TLeu_meanCp - P3_meanCp), 3)]
means[is.na(dose) & TLeu_meanCp < 36, dose := 0]
means
source("tools.R")
library(ggplot2)
library(viridis)
library(data.table)
library(readxl)
library(stringi)
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/extractions et qPCR virus.xlsx"
sheet = "dosages tissus 13 juin"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "K3:V10", col_names = F))
loci1 = data.table(read_xlsx(path = file, sheet = sheet, range = "K13:V20", col_names = F))
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("loci2")) {
locus2 = as.vector(as.matrix(loci2))
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[tolower(locus) == "tleu", type := "Reference"]
if(exists("loci2")) {
plan[tolower(locus) == "tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
planb = copy(plan)
setnames(planb, c("General:Pos", "General:Sample Name", "General:Target Name", "Rel Quant:Target Type", "General:Filt. Comb.", "General:Repl. Of"))
ref = fread("/Volumes/WININSTALL/plate25062024_tleu.txt", skip = 1, header = T, select = 3:5, dec = ",")
target = fread("/Volumes/WININSTALL/plate25062024_p3.txt", skip = 1, header = T, select = 3:5, dec = ",")
ref
Cp = merge(ref, target, by = c("Pos","Name"), all = T, suffixes = c(".ref",".taget"))
Cp
Cp[, dose := round(2^(Cp.ref - Cp.taget), 3)]
Cp[, dose := round(2^(Cp.ref - Cp.taget), 3)]
Cp[, Name := gsub(" ", "_", Name, fixed = T)]
Co
Cp
means = Cp[,.(Cp := mean(Cp)), by = Name]
means = Cp[,.(Cp := mean(Cp)), by = Name]
means = Cp[,.(dose := mean(dose)), by = Name]
means = Cp[,.(dose := mean(dose)), by = Name]
Cp
means = Cp[,.(dose = mean(dose)), by = Name]
means
means$dose
file = "/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/extractions et qPCR virus.xlsx"
sheet = "1ere série femelles phylogénie"
plan = data.table(read_xlsx(path = file, sheet = sheet, range = "H18:N25", col_names = F))
plan
loci1 = "Tleu"
loci2 = "P3"
nc = ncol(plan)
nr = nrow(plan)
rows = LETTERS[1:nr]
plan = as.vector(as.matrix(plan))
locus1 = as.vector(as.matrix(loci1))
plan = data.table(pos = stri_c(rep(rows, nc), rep(1:nc, each = nr)) , sample = plan, locus = locus1)
plan[, type := "Target"]
plan[, filter := "533-580"]
if(exists("loci2")) {
locus2 = as.vector(as.matrix(loci2))
planRef = copy(plan)
planRef[,locus := locus2]
plan = rbind(plan, planRef)
}
plan[tolower(locus) == "tleu", type := "Reference"]
if(exists("loci2")) {
plan[tolower(locus) == "tleu", filter := "465-510"]
}
setorder(plan, pos)
sampleLocus = plan[, paste(sample, locus)]
m = match(sampleLocus, sampleLocus)
plan[,repl := pos[m]]
plan[is.na(repl), repl := ""]
planb = copy(plan)
setnames(planb, c("General:Pos", "General:Sample Name", "General:Target Name", "Rel Quant:Target Type", "General:Filt. Comb.", "General:Repl. Of"))
planb
fwrite(planb[`General:Sample Name` != "",], "/Volumes/WININSTALL/plate27062024.txt",  row.names = F, col.names = T, quote = F, sep = "\t")
Cp = fread("/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/qPCR_27_06_2024/qPCR_27062024.txt")
Cp
Cp = melt(Cp, id.vars = "Name", measure.vars = c("Cp.target", "Cp.ref"), variable.name = "Cp", value.name = "Locus")
Cp = melt(Cp, id.vars = "Name", measure.vars = c("Cp.taget", "Cp.ref"), variable.name = "Cp", value.name = "Locus")
Cp
Cp = fread("/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/qPCR_27_06_2024/qPCR_27062024.txt")
Cp
ggplot(Cp, aes(x = Name, y = dose)) + geom_point
library(ggplot2)
ggplot(Cp, aes(x = Name, y = dose)) + geom_point
ggplot(Cp, aes(x = Name, y = dose)) + geom_point()
ggplot(Cp, aes(x = Name, y = dose)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(Cp, aes(x = Name, y = log(dose))) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(Cp, aes(x = Name, y = dose)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(Cp, aes(x = Name, y = dose)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
Cp
ggplot(Cp, aes(x = Name, y = Cp.target)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(Cp, aes(x = Name, y = Cp.taget)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
head(Cp)
setnames(Cp, 4, "Cp.target")
ggplot(Cp, aes(x = Name, y = Cp.target)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(Cp, aes(x = Name, y = Cp.ref)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(Cp, aes(x = Name, y = dose+1/100)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp, aes(x = Name, y = dose+0.05)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose+0.05)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose+0.01)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose+1)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose+0.01)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose+0.02)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose+0.03)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
library(data.table)
library(readxl)
library(stringi)
Cp = fread("/Users/jean/Library/CloudStorage/OneDrive-UniversitédePoitiers/Arcangelii_teams/dosages virus/qPCR_27_06_2024/qPCR_27062024.txt")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
library(ggplot2)
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = "log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_y_continuous(trans = log10_trans())
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_trans(y="log10")
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_trans(y="log10")  +
scale_y_continuous(trans = log10_trans(),
breaks = trans_breaks("log10", function(x) 10^x))
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_trans(y="log10") + ylim(0, NA)
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_trans(y="log10") + ylim(0.1, NA)
ggplot(Cp[Cp.ref < 30,], aes(x = Name, y = dose)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_trans(y="log10") + ylim(0.01, NA)
ggplot(Cp[Cp.ref < 40,], aes(x = Name, y = Cp.target)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_trans(y="log10")
Cp
ggplot(Cp[Cp.ref < 40,], aes(x = Name, y = Cp.taget)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + coord_trans(y="log10")
ggplot(Cp[Cp.ref < 40,], aes(x = Name, y = Cp.taget)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
log(10, 2)
log(16, 2)
ggplot(Cp[Cp.ref < 40,], aes(x = Name, y = Cp.taget)) + geom_point() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + theme_minimal()
ggplot(Cp[Cp.ref < 40,], aes(x = Name, y = Cp.taget)) + geom_point() + theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
log(10, 2)
log(10, 2)*4+16
library(stringi)
library(data.table)
setwd("/Users/jean/Library/Mobile Documents/com~apple~CloudDocs/Developer/STRyper/STRyper")
code = list.files(pattern = ".m$|.h$", recursive = T)
lines = lapply(code, readLines)
countCode = function(lines) {
nonEmpty = grepl("\\S+", lines)
trimmed = trimws(lines[nonEmpty])
noComment = !substring(trimmed, 1, 2) %in% c("//"," /*")
sum(noComment)
}
countCode = function(lines) {
nonEmpty = grepl("\\S+", lines)
trimmed = trimws(lines[nonEmpty])
noComment = !substring(trimmed, 1, 2) %in% c("//"," /*")
sum(trimmed)
}
df = data.table(nom = basename(code), lines = sapply(lines, countCode))
countCode = function(lines) {
nonEmpty = grepl("\\S+", lines)
trimmed = trimws(lines[nonEmpty])
noComment = !substring(trimmed, 1, 2) %in% c("//"," /*")
length(trimmed)
}
df = data.table(nom = basename(code), lines = sapply(lines, countCode))
setorder(df, -lines)
data.frame(df)
sum(df$lines)
countCode = function(lines) {
nonEmpty = grepl("\\S+", lines)
trimmed = trimws(lines[nonEmpty])
noComment = !substring(trimmed, 1, 2) %in% c("//"," /*")
sum(nonEmpty)
}
df = data.table(nom = basename(code), lines = sapply(lines, countCode))
setorder(df, -lines)
data.frame(df)
sum(df$lines)
